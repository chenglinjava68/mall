<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plateno.booking.internal.base.mapper.OrderProductMapper" >
  <resultMap id="BaseResultMap" type="com.plateno.booking.internal.base.pojo.OrderProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="skuid" property="skuid" jdbcType="INTEGER" />
    <result column="sku_count" property="skuCount" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_property" property="productProperty" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="up_time" property="upTime" jdbcType="TIMESTAMP" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="sell_strategy" property="sellStrategy" jdbcType="INTEGER" />
    <result column="dis_images" property="disImages" jdbcType="VARCHAR" />
    <result column="price_strategy" property="priceStrategy" jdbcType="TINYINT" />
    <result column="price_strategy_desc" property="priceStrategyDesc" jdbcType="VARCHAR" />
    <result column="deduct_price" property="deductPrice" jdbcType="INTEGER" />
    <result column="product_cost" property="productCost" jdbcType="INTEGER" />
    <result column="express_cost" property="expressCost" jdbcType="INTEGER" />
    <result column="return_sku_count" property="returnSkuCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, skuid, sku_count, price, product_id, product_name, product_property, 
    create_time, up_time, point, sell_strategy, dis_images, price_strategy, price_strategy_desc,deduct_price,product_cost,express_cost,return_sku_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.plateno.booking.internal.base.pojo.OrderProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_order_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_order_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.plateno.booking.internal.base.pojo.OrderProductExample" >
    delete from m_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.plateno.booking.internal.base.pojo.OrderProduct" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_order_product (order_no, skuid, sku_count, 
      price, product_id, product_name, 
      product_property, create_time, up_time, 
      point, sell_strategy, dis_images, price_strategy, price_strategy_desc,deduct_price,product_cost,express_cost,return_sku_count
      )
    values (#{orderNo,jdbcType=VARCHAR}, #{skuid,jdbcType=INTEGER}, #{skuCount,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, 
      #{productProperty,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{upTime,jdbcType=TIMESTAMP}, 
      #{point,jdbcType=INTEGER}, #{sellStrategy,jdbcType=INTEGER}, #{disImages,jdbcType=VARCHAR}, #{priceStrategy,jdbcType=TINYINT}, #{priceStrategyDesc,jdbcType=VARCHAR}, #{deductPrice,jdbcType=INTEGER}, #{productCost,jdbcType=INTEGER}, #{expressCost,jdbcType=INTEGER},
      #{returnSkuCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.plateno.booking.internal.base.pojo.OrderProduct" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_order_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="skuid != null" >
        skuid,
      </if>
      <if test="skuCount != null" >
        sku_count,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productProperty != null" >
        product_property,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="upTime != null" >
        up_time,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="sellStrategy != null" >
        sell_strategy,
      </if>
      <if test="disImages != null" >
        dis_images,
      </if>
      <if test="priceStrategy != null" >
        price_strategy,
      </if>
      <if test="priceStrategyDesc != null" >
        price_strategy_desc,
      </if>
      <if test="deductPrice != null" >
        deduct_price,
      </if>
      <if test="productCost != null" >
        product_cost,
      </if>
      <if test="expressCost != null" >
        express_cost,
      </if>
      <if test="returnSkuCount != null" >
        return_sku_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="skuid != null" >
        #{skuid,jdbcType=INTEGER},
      </if>
      <if test="skuCount != null" >
        #{skuCount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productProperty != null" >
        #{productProperty,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upTime != null" >
        #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="sellStrategy != null" >
        #{sellStrategy,jdbcType=INTEGER},
      </if>
      <if test="disImages != null" >
        #{disImages,jdbcType=VARCHAR},
      </if>
      <if test="priceStrategy != null" >
        #{priceStrategy,jdbcType=INTEGER},
      </if>
      <if test="priceStrategyDesc != null" >
        #{priceStrategyDesc,jdbcType=VARCHAR},
      </if>
      <if test="deductPrice != null" >
        #{deductPrice,jdbcType=INTEGER},
      </if>
      <if test="productCost != null" >
        #{productCost,jdbcType=INTEGER},
      </if>
      <if test="expressCost != null" >
        #{expressCost,jdbcType=INTEGER},
      </if>
      <if test="returnSkuCount != null" >
        #{returnSkuCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.plateno.booking.internal.base.pojo.OrderProductExample" resultType="java.lang.Integer" >
    select count(*) from m_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_order_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.skuid != null" >
        skuid = #{record.skuid,jdbcType=INTEGER},
      </if>
      <if test="record.skuCount != null" >
        sku_count = #{record.skuCount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productProperty != null" >
        product_property = #{record.productProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upTime != null" >
        up_time = #{record.upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.sellStrategy != null" >
        sell_strategy = #{record.sellStrategy,jdbcType=INTEGER},
      </if>
      <if test="record.disImages != null" >
        dis_images = #{record.disImages,jdbcType=VARCHAR},
      </if>
      <if test="record.returnSkucount != null" >
        return_sku_count = #{record.returnSkucount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_order_product
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      skuid = #{record.skuid,jdbcType=INTEGER},
      sku_count = #{record.skuCount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_property = #{record.productProperty,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      up_time = #{record.upTime,jdbcType=TIMESTAMP},
      point = #{record.point,jdbcType=INTEGER},
      sell_strategy = #{record.sellStrategy,jdbcType=INTEGER},
      dis_images = #{record.disImages,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.plateno.booking.internal.base.pojo.OrderProduct" >
    update m_order_product
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="skuid != null" >
        skuid = #{skuid,jdbcType=INTEGER},
      </if>
      <if test="skuCount != null" >
        sku_count = #{skuCount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productProperty != null" >
        product_property = #{productProperty,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upTime != null" >
        up_time = #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="sellStrategy != null" >
        sell_strategy = #{sellStrategy,jdbcType=INTEGER},
      </if>
      <if test="disImages != null" >
        dis_images = #{disImages,jdbcType=VARCHAR},
      </if>
      <if test="returnSkucount != null" >
        return_sku_count = #{returnSkucount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plateno.booking.internal.base.pojo.OrderProduct" >
    update m_order_product
    set order_no = #{orderNo,jdbcType=VARCHAR},
      skuid = #{skuid,jdbcType=INTEGER},
      sku_count = #{skuCount,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      product_property = #{productProperty,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      up_time = #{upTime,jdbcType=TIMESTAMP},
      point = #{point,jdbcType=INTEGER},
      sell_strategy = #{sellStrategy,jdbcType=INTEGER},
      dis_images = #{disImages,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.plateno.booking.internal.base.pojo.OrderProductExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_order_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="queryUserProductSum" resultType="integer">
  	<![CDATA[ 
		select 
			ifnull(sum(sku_count), 0)
		from 
			m_order o 
		left join 
			m_order_product p
		on
			o.order_no = p.order_no
		where
			o.member_id = #{memberId} and p.product_id = #{productId} and pay_status in (1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13)
	]]>
  </select>
  
  <update id="updateReturnSkuCount">
  	<![CDATA[ 
	    update m_order_product set return_sku_count = return_sku_count + #{returnSkuCount}
	    where id = #{id} and sku_count >= return_sku_count + #{returnSkuCount}
    ]]>
  </update>
</mapper>