<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plateno.booking.internal.base.mapper.MLogisticsMapper" >
  <resultMap id="BaseResultMap" type="com.plateno.booking.internal.base.pojo.MLogistics" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="logistics_type" property="logisticsType" jdbcType="INTEGER" />
    <result column="logistics_no" property="logisticsNo" jdbcType="VARCHAR" />
    <result column="express_fee" property="expressFee" jdbcType="INTEGER" />
    <result column="consignee_address" property="consigneeAddress" jdbcType="VARCHAR" />
    <result column="shipping_type" property="shippingType" jdbcType="INTEGER" />
    <result column="consignee_name" property="consigneeName" jdbcType="VARCHAR" />
    <result column="consignee_mobile" property="consigneeMobile" jdbcType="VARCHAR" />
    <result column="consignee_newaddress" property="consigneeNewaddress" jdbcType="VARCHAR" />
    <result column="consignee_new_name" property="consigneeNewName" jdbcType="VARCHAR" />
    <result column="consignee_new_mobile" property="consigneeNewMobile" jdbcType="VARCHAR" />
    <result column="total_express_cost" property="totalExpressCost" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose>
               <when test="criterion.noValue" >
                    and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose>
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, logistics_type, logistics_no, express_fee, consignee_address, shipping_type, 
    consignee_name, consignee_mobile, consignee_newaddress, consignee_new_name, consignee_new_mobile,total_express_cost
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.plateno.booking.internal.base.pojo.MLogisticsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_logistics
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_logistics
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.plateno.booking.internal.base.pojo.MLogisticsExample" >
    delete from m_logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.plateno.booking.internal.base.pojo.MLogistics" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_logistics (order_no, logistics_type, logistics_no, 
      express_fee, consignee_address, shipping_type, 
      consignee_name, consignee_mobile, consignee_newaddress, total_express_cost
      )
    values (#{orderNo,jdbcType=VARCHAR}, #{logisticsType,jdbcType=INTEGER}, #{logisticsNo,jdbcType=VARCHAR}, 
      #{expressFee,jdbcType=INTEGER}, #{consigneeAddress,jdbcType=VARCHAR}, #{shippingType,jdbcType=INTEGER}, 
      #{consigneeName,jdbcType=VARCHAR}, #{consigneeMobile,jdbcType=VARCHAR}, #{consigneeNewaddress,jdbcType=VARCHAR},#{totalExpressCost,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.plateno.booking.internal.base.pojo.MLogistics" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into m_logistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="logisticsType != null" >
        logistics_type,
      </if>
      <if test="logisticsNo != null" >
        logistics_no,
      </if>
      <if test="expressFee != null" >
        express_fee,
      </if>
      <if test="consigneeAddress != null" >
        consignee_address,
      </if>
      <if test="shippingType != null" >
        shipping_type,
      </if>
      <if test="consigneeName != null" >
        consignee_name,
      </if>
      <if test="consigneeMobile != null" >
        consignee_mobile,
      </if>
      <if test="consigneeNewaddress != null" >
        consignee_newaddress,
      </if>
      <if test="totalExpressCost != null" >
        total_express_cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="logisticsType != null" >
        #{logisticsType,jdbcType=INTEGER},
      </if>
      <if test="logisticsNo != null" >
        #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="expressFee != null" >
        #{expressFee,jdbcType=INTEGER},
      </if>
      <if test="consigneeAddress != null" >
        #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="shippingType != null" >
        #{shippingType,jdbcType=INTEGER},
      </if>
      <if test="consigneeName != null" >
        #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMobile != null" >
        #{consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="consigneeNewaddress != null" >
        #{consigneeNewaddress,jdbcType=VARCHAR},
      </if>
      <if test="totalExpressCost != null" >
        #{totalExpressCost,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.plateno.booking.internal.base.pojo.MLogisticsExample" resultType="java.lang.Integer" >
    select count(*) from m_logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_logistics
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsType != null" >
        logistics_type = #{record.logisticsType,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsNo != null" >
        logistics_no = #{record.logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="record.expressFee != null" >
        express_fee = #{record.expressFee,jdbcType=INTEGER},
      </if>
      <if test="record.consigneeAddress != null" >
        consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingType != null" >
        shipping_type = #{record.shippingType,jdbcType=INTEGER},
      </if>
      <if test="record.consigneeName != null" >
        consignee_name = #{record.consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeMobile != null" >
        consignee_mobile = #{record.consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeNewaddress != null" >
        consignee_newaddress = #{record.consigneeNewaddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_logistics
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      logistics_type = #{record.logisticsType,jdbcType=INTEGER},
      logistics_no = #{record.logisticsNo,jdbcType=VARCHAR},
      express_fee = #{record.expressFee,jdbcType=INTEGER},
      consignee_address = #{record.consigneeAddress,jdbcType=VARCHAR},
      shipping_type = #{record.shippingType,jdbcType=INTEGER},
      consignee_name = #{record.consigneeName,jdbcType=VARCHAR},
      consignee_mobile = #{record.consigneeMobile,jdbcType=VARCHAR},
      consignee_newaddress = #{record.consigneeNewaddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.plateno.booking.internal.base.pojo.MLogistics" >
    update m_logistics
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="logisticsType != null" >
        logistics_type = #{logisticsType,jdbcType=INTEGER},
      </if>
      <if test="logisticsNo != null" >
        logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      </if>
      <if test="expressFee != null" >
        express_fee = #{expressFee,jdbcType=INTEGER},
      </if>
      <if test="consigneeAddress != null" >
        consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
      </if>
      <if test="shippingType != null" >
        shipping_type = #{shippingType,jdbcType=INTEGER},
      </if>
      <if test="consigneeName != null" >
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMobile != null" >
        consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="consigneeNewaddress != null" >
        consignee_newaddress = #{consigneeNewaddress,jdbcType=VARCHAR},
      </if>
      <if test="consigneeNewName != null" >
        consignee_new_name = #{consigneeNewName,jdbcType=VARCHAR},
      </if>
      <if test="consigneeNewMobile != null" >
        consignee_new_mobile = #{consigneeNewMobile,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plateno.booking.internal.base.pojo.MLogistics" >
    update m_logistics
    set order_no = #{orderNo,jdbcType=VARCHAR},
      logistics_type = #{logisticsType,jdbcType=INTEGER},
      logistics_no = #{logisticsNo,jdbcType=VARCHAR},
      express_fee = #{expressFee,jdbcType=INTEGER},
      consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
      shipping_type = #{shippingType,jdbcType=INTEGER},
      consignee_name = #{consigneeName,jdbcType=VARCHAR},
      consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
      consignee_newaddress = #{consigneeNewaddress,jdbcType=VARCHAR},
      consignee_new_name = #{consigneeNewName,jdbcType=VARCHAR},
      consignee_new_mobile = #{consigneeNewMobile,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.plateno.booking.internal.base.pojo.MLogisticsExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_logistics
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>